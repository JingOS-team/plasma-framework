import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.kde.plasma.calendar 2.0 /home/apol/devel/kde5/lib64/qml -output /home/apol/devel/frameworks/plasma-framework/src/declarativeimports/calendar/plugins.qmltypes'

Module {
    dependencies: []
    Component {
        name: "Calendar"
        prototype: "QObject"
        exports: ["org.kde.plasma.calendar/Calendar 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "Holiday": 1,
                "Event": 2,
                "Todo": 4,
                "Journal": 8
            }
        }
        Enum {
            name: "DateMatchingPrecision"
            values: {
                "MatchYear": 0,
                "MatchYearAndMonth": 1,
                "MatchYearMonthAndDay": 2
            }
        }
        Property { name: "displayedDate"; type: "QDate" }
        Property { name: "today"; type: "QDate" }
        Property { name: "types"; type: "int" }
        Property { name: "weeksModel"; type: "QJsonArray"; isReadonly: true }
        Property { name: "days"; type: "int" }
        Property { name: "weeks"; type: "int" }
        Property { name: "firstDayOfWeek"; type: "int" }
        Property { name: "year"; type: "int"; isReadonly: true }
        Property { name: "errorMessage"; type: "string"; isReadonly: true }
        Property { name: "monthName"; type: "string"; isReadonly: true }
        Property { name: "daysModel"; type: "QAbstractListModel"; isReadonly: true; isPointer: true }
        Method { name: "updateData" }
        Method { name: "nextMonth" }
        Method { name: "previousMonth" }
        Method { name: "nextYear" }
        Method { name: "previousYear" }
        Method { name: "nextDecade" }
        Method { name: "previousDecade" }
        Method {
            name: "dayName"
            type: "string"
            Parameter { name: "weekday"; type: "int" }
        }
        Method { name: "currentWeek"; type: "int" }
        Method { name: "resetToToday" }
        Method {
            name: "goToMonth"
            Parameter { name: "month"; type: "int" }
        }
        Method {
            name: "goToYear"
            Parameter { name: "year"; type: "int" }
        }
    }
    Component {
        name: "CalendarData"
        prototype: "QObject"
        exports: ["org.kde.plasma.calendar/CalendarData 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "Holiday": 1,
                "Event": 2,
                "Todo": 4,
                "Journal": 8
            }
        }
        Property { name: "startDate"; type: "QDate" }
        Property { name: "endDate"; type: "QDate" }
        Property { name: "errorMessage"; type: "string"; isReadonly: true }
        Property { name: "loading"; type: "bool"; isReadonly: true }
        Signal { name: "typesChanged" }
    }
    Component {
        name: "DaysModel"
        prototype: "QAbstractListModel"
        Signal {
            name: "agendaUpdated"
            Parameter { name: "updatedDate"; type: "QDate" }
        }
        Method { name: "update" }
        Method {
            name: "setPluginsManager"
            Parameter { name: "manager"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "eventsForDate"
            type: "QList<QObject*>"
            Parameter { name: "date"; type: "QDate" }
        }
    }
    Component {
        name: "EventDataDecorator"
        prototype: "QObject"
        exports: ["org.kde.plasma.calendar/EventDataDecorator 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "startDateTime"; type: "QDateTime"; isReadonly: true }
        Property { name: "endDateTime"; type: "QDateTime"; isReadonly: true }
        Property { name: "isAllDay"; type: "bool"; isReadonly: true }
        Property { name: "isMinor"; type: "bool"; isReadonly: true }
        Property { name: "title"; type: "string"; isReadonly: true }
        Property { name: "description"; type: "string"; isReadonly: true }
        Property { name: "eventColor"; type: "string"; isReadonly: true }
        Property { name: "eventType"; type: "string"; isReadonly: true }
        Signal { name: "eventDataChanged" }
    }
    Component {
        name: "EventPluginsManager"
        prototype: "QObject"
        exports: ["org.kde.plasma.calendar/EventPluginsManager 2.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "QAbstractListModel"; isReadonly: true; isPointer: true }
        Property { name: "enabledPlugins"; type: "QStringList" }
        Signal { name: "pluginsChanged" }
        Signal {
            name: "dataReady"
            Parameter { name: "data"; type: "QMultiHash<QDate,CalendarEvents::EventData>" }
        }
        Signal {
            name: "eventModified"
            Parameter { name: "modifiedEvent"; type: "CalendarEvents::EventData" }
        }
        Signal {
            name: "eventRemoved"
            Parameter { name: "uid"; type: "string" }
        }
        Method {
            name: "populateEnabledPluginsList"
            Parameter { name: "pluginsList"; type: "QStringList" }
        }
    }
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
}
